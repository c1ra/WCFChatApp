//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebClient.SerRefWC {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SerRefWC.IAdmin", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IAdmin {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdmin/test1", ReplyAction="http://tempuri.org/IAdmin/test1Response")]
        string test1(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdmin/test1", ReplyAction="http://tempuri.org/IAdmin/test1Response")]
        System.Threading.Tasks.Task<string> test1Async(int value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminChannel : WebClient.SerRefWC.IAdmin, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminClient : System.ServiceModel.ClientBase<WebClient.SerRefWC.IAdmin>, WebClient.SerRefWC.IAdmin {
        
        public AdminClient() {
        }
        
        public AdminClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string test1(int value) {
            return base.Channel.test1(value);
        }
        
        public System.Threading.Tasks.Task<string> test1Async(int value) {
            return base.Channel.test1Async(value);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SerRefWC.IClient", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IClient {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/test2", ReplyAction="http://tempuri.org/IClient/test2Response")]
        string test2(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/test2", ReplyAction="http://tempuri.org/IClient/test2Response")]
        System.Threading.Tasks.Task<string> test2Async(int value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientChannel : WebClient.SerRefWC.IClient, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientClient : System.ServiceModel.ClientBase<WebClient.SerRefWC.IClient>, WebClient.SerRefWC.IClient {
        
        public ClientClient() {
        }
        
        public ClientClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string test2(int value) {
            return base.Channel.test2(value);
        }
        
        public System.Threading.Tasks.Task<string> test2Async(int value) {
            return base.Channel.test2Async(value);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SerRefWC.IWebClient")]
    public interface IWebClient {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebClient/test3", ReplyAction="http://tempuri.org/IWebClient/test3Response")]
        string test3(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebClient/test3", ReplyAction="http://tempuri.org/IWebClient/test3Response")]
        System.Threading.Tasks.Task<string> test3Async(string value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWebClientChannel : WebClient.SerRefWC.IWebClient, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebClientClient : System.ServiceModel.ClientBase<WebClient.SerRefWC.IWebClient>, WebClient.SerRefWC.IWebClient {
        
        public WebClientClient() {
        }
        
        public WebClientClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebClientClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebClientClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebClientClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string test3(string value) {
            return base.Channel.test3(value);
        }
        
        public System.Threading.Tasks.Task<string> test3Async(string value) {
            return base.Channel.test3Async(value);
        }
    }
}
