//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace localClient.SerRefLC {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/WCFChatApp")]
    [System.SerializableAttribute()]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Id_CField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NadimakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsrNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id_C {
            get {
                return this.Id_CField;
            }
            set {
                if ((this.Id_CField.Equals(value) != true)) {
                    this.Id_CField = value;
                    this.RaisePropertyChanged("Id_C");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nadimak {
            get {
                return this.NadimakField;
            }
            set {
                if ((object.ReferenceEquals(this.NadimakField, value) != true)) {
                    this.NadimakField = value;
                    this.RaisePropertyChanged("Nadimak");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pass {
            get {
                return this.PassField;
            }
            set {
                if ((object.ReferenceEquals(this.PassField, value) != true)) {
                    this.PassField = value;
                    this.RaisePropertyChanged("Pass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UsrName {
            get {
                return this.UsrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsrNameField, value) != true)) {
                    this.UsrNameField = value;
                    this.RaisePropertyChanged("UsrName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/WCFChatApp")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Id_MsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Id_PosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Id_PrimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MsgTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MsgTxtField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id_Msg {
            get {
                return this.Id_MsgField;
            }
            set {
                if ((this.Id_MsgField.Equals(value) != true)) {
                    this.Id_MsgField = value;
                    this.RaisePropertyChanged("Id_Msg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id_Pos {
            get {
                return this.Id_PosField;
            }
            set {
                if ((this.Id_PosField.Equals(value) != true)) {
                    this.Id_PosField = value;
                    this.RaisePropertyChanged("Id_Pos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id_Prim {
            get {
                return this.Id_PrimField;
            }
            set {
                if ((this.Id_PrimField.Equals(value) != true)) {
                    this.Id_PrimField = value;
                    this.RaisePropertyChanged("Id_Prim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MsgTime {
            get {
                return this.MsgTimeField;
            }
            set {
                if ((this.MsgTimeField.Equals(value) != true)) {
                    this.MsgTimeField = value;
                    this.RaisePropertyChanged("MsgTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MsgTxt {
            get {
                return this.MsgTxtField;
            }
            set {
                if ((object.ReferenceEquals(this.MsgTxtField, value) != true)) {
                    this.MsgTxtField = value;
                    this.RaisePropertyChanged("MsgTxt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Group", Namespace="http://schemas.datacontract.org/2004/07/WCFChatApp")]
    [System.SerializableAttribute()]
    public partial class Group : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Id_GField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxMembersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GName {
            get {
                return this.GNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GNameField, value) != true)) {
                    this.GNameField = value;
                    this.RaisePropertyChanged("GName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id_G {
            get {
                return this.Id_GField;
            }
            set {
                if ((this.Id_GField.Equals(value) != true)) {
                    this.Id_GField = value;
                    this.RaisePropertyChanged("Id_G");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxMembers {
            get {
                return this.MaxMembersField;
            }
            set {
                if ((this.MaxMembersField.Equals(value) != true)) {
                    this.MaxMembersField = value;
                    this.RaisePropertyChanged("MaxMembers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupClient", Namespace="http://schemas.datacontract.org/2004/07/WCFChatApp")]
    [System.SerializableAttribute()]
    public partial class GroupClient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Id_CField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Id_GField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id_C {
            get {
                return this.Id_CField;
            }
            set {
                if ((this.Id_CField.Equals(value) != true)) {
                    this.Id_CField = value;
                    this.RaisePropertyChanged("Id_C");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id_G {
            get {
                return this.Id_GField;
            }
            set {
                if ((this.Id_GField.Equals(value) != true)) {
                    this.Id_GField = value;
                    this.RaisePropertyChanged("Id_G");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SerRefLC.IAdmin", CallbackContract=typeof(localClient.SerRefLC.IAdminCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IAdmin {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/LogIn", ReplyAction="http://tempuri.org/IClient/LogInResponse")]
        bool LogIn(string UsrName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/LogIn", ReplyAction="http://tempuri.org/IClient/LogInResponse")]
        System.Threading.Tasks.Task<bool> LogInAsync(string UsrName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, Action="http://tempuri.org/IClient/LogOut")]
        void LogOut(localClient.SerRefLC.Client client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, Action="http://tempuri.org/IClient/LogOut")]
        System.Threading.Tasks.Task LogOutAsync(localClient.SerRefLC.Client client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClient/sendMessage")]
        void sendMessage(localClient.SerRefLC.Message msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClient/sendMessage")]
        System.Threading.Tasks.Task sendMessageAsync(localClient.SerRefLC.Message msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClient/GroupRequest")]
        void GroupRequest(localClient.SerRefLC.Client c, localClient.SerRefLC.Group g);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClient/GroupRequest")]
        System.Threading.Tasks.Task GroupRequestAsync(localClient.SerRefLC.Client c, localClient.SerRefLC.Group g);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClient/GroupLeave")]
        void GroupLeave(localClient.SerRefLC.Client c, localClient.SerRefLC.Group g);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClient/GroupLeave")]
        System.Threading.Tasks.Task GroupLeaveAsync(localClient.SerRefLC.Client c, localClient.SerRefLC.Group g);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdmin/CreateUser", ReplyAction="http://tempuri.org/IAdmin/CreateUserResponse")]
        bool CreateUser(localClient.SerRefLC.Client usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdmin/CreateUser", ReplyAction="http://tempuri.org/IAdmin/CreateUserResponse")]
        System.Threading.Tasks.Task<bool> CreateUserAsync(localClient.SerRefLC.Client usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdmin/EditUser", ReplyAction="http://tempuri.org/IAdmin/EditUserResponse")]
        bool EditUser(localClient.SerRefLC.Client usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdmin/EditUser", ReplyAction="http://tempuri.org/IAdmin/EditUserResponse")]
        System.Threading.Tasks.Task<bool> EditUserAsync(localClient.SerRefLC.Client usr);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdmin/GroupRequestApproval")]
        void GroupRequestApproval(localClient.SerRefLC.Client c, localClient.SerRefLC.Group g, bool approval);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdmin/GroupRequestApproval")]
        System.Threading.Tasks.Task GroupRequestApprovalAsync(localClient.SerRefLC.Client c, localClient.SerRefLC.Group g, bool approval);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetMs", ReplyAction="http://tempuri.org/IClient/GetMsResponse")]
        void GetMs(localClient.SerRefLC.Message[] msgs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetGs", ReplyAction="http://tempuri.org/IClient/GetGsResponse")]
        void GetGs(localClient.SerRefLC.Group[] groups);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdmin/getGroupRequests", ReplyAction="http://tempuri.org/IAdmin/getGroupRequestsResponse")]
        void getGroupRequests(localClient.SerRefLC.GroupClient[] groupClients);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminChannel : localClient.SerRefLC.IAdmin, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminClient : System.ServiceModel.DuplexClientBase<localClient.SerRefLC.IAdmin>, localClient.SerRefLC.IAdmin {
        
        public AdminClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public AdminClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public AdminClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AdminClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AdminClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool LogIn(string UsrName, string Password) {
            return base.Channel.LogIn(UsrName, Password);
        }
        
        public System.Threading.Tasks.Task<bool> LogInAsync(string UsrName, string Password) {
            return base.Channel.LogInAsync(UsrName, Password);
        }
        
        public void LogOut(localClient.SerRefLC.Client client) {
            base.Channel.LogOut(client);
        }
        
        public System.Threading.Tasks.Task LogOutAsync(localClient.SerRefLC.Client client) {
            return base.Channel.LogOutAsync(client);
        }
        
        public void sendMessage(localClient.SerRefLC.Message msg) {
            base.Channel.sendMessage(msg);
        }
        
        public System.Threading.Tasks.Task sendMessageAsync(localClient.SerRefLC.Message msg) {
            return base.Channel.sendMessageAsync(msg);
        }
        
        public void GroupRequest(localClient.SerRefLC.Client c, localClient.SerRefLC.Group g) {
            base.Channel.GroupRequest(c, g);
        }
        
        public System.Threading.Tasks.Task GroupRequestAsync(localClient.SerRefLC.Client c, localClient.SerRefLC.Group g) {
            return base.Channel.GroupRequestAsync(c, g);
        }
        
        public void GroupLeave(localClient.SerRefLC.Client c, localClient.SerRefLC.Group g) {
            base.Channel.GroupLeave(c, g);
        }
        
        public System.Threading.Tasks.Task GroupLeaveAsync(localClient.SerRefLC.Client c, localClient.SerRefLC.Group g) {
            return base.Channel.GroupLeaveAsync(c, g);
        }
        
        public bool CreateUser(localClient.SerRefLC.Client usr) {
            return base.Channel.CreateUser(usr);
        }
        
        public System.Threading.Tasks.Task<bool> CreateUserAsync(localClient.SerRefLC.Client usr) {
            return base.Channel.CreateUserAsync(usr);
        }
        
        public bool EditUser(localClient.SerRefLC.Client usr) {
            return base.Channel.EditUser(usr);
        }
        
        public System.Threading.Tasks.Task<bool> EditUserAsync(localClient.SerRefLC.Client usr) {
            return base.Channel.EditUserAsync(usr);
        }
        
        public void GroupRequestApproval(localClient.SerRefLC.Client c, localClient.SerRefLC.Group g, bool approval) {
            base.Channel.GroupRequestApproval(c, g, approval);
        }
        
        public System.Threading.Tasks.Task GroupRequestApprovalAsync(localClient.SerRefLC.Client c, localClient.SerRefLC.Group g, bool approval) {
            return base.Channel.GroupRequestApprovalAsync(c, g, approval);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SerRefLC.IClient", CallbackContract=typeof(localClient.SerRefLC.IClientCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IClient {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/LogIn", ReplyAction="http://tempuri.org/IClient/LogInResponse")]
        bool LogIn(string UsrName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/LogIn", ReplyAction="http://tempuri.org/IClient/LogInResponse")]
        System.Threading.Tasks.Task<bool> LogInAsync(string UsrName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, Action="http://tempuri.org/IClient/LogOut")]
        void LogOut(localClient.SerRefLC.Client client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, Action="http://tempuri.org/IClient/LogOut")]
        System.Threading.Tasks.Task LogOutAsync(localClient.SerRefLC.Client client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClient/sendMessage")]
        void sendMessage(localClient.SerRefLC.Message msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClient/sendMessage")]
        System.Threading.Tasks.Task sendMessageAsync(localClient.SerRefLC.Message msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClient/GroupRequest")]
        void GroupRequest(localClient.SerRefLC.Client c, localClient.SerRefLC.Group g);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClient/GroupRequest")]
        System.Threading.Tasks.Task GroupRequestAsync(localClient.SerRefLC.Client c, localClient.SerRefLC.Group g);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClient/GroupLeave")]
        void GroupLeave(localClient.SerRefLC.Client c, localClient.SerRefLC.Group g);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClient/GroupLeave")]
        System.Threading.Tasks.Task GroupLeaveAsync(localClient.SerRefLC.Client c, localClient.SerRefLC.Group g);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetMs", ReplyAction="http://tempuri.org/IClient/GetMsResponse")]
        void GetMs(localClient.SerRefLC.Message[] msgs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetGs", ReplyAction="http://tempuri.org/IClient/GetGsResponse")]
        void GetGs(localClient.SerRefLC.Group[] groups);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientChannel : localClient.SerRefLC.IClient, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientClient : System.ServiceModel.DuplexClientBase<localClient.SerRefLC.IClient>, localClient.SerRefLC.IClient {
        
        public ClientClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ClientClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ClientClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ClientClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ClientClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool LogIn(string UsrName, string Password) {
            return base.Channel.LogIn(UsrName, Password);
        }
        
        public System.Threading.Tasks.Task<bool> LogInAsync(string UsrName, string Password) {
            return base.Channel.LogInAsync(UsrName, Password);
        }
        
        public void LogOut(localClient.SerRefLC.Client client) {
            base.Channel.LogOut(client);
        }
        
        public System.Threading.Tasks.Task LogOutAsync(localClient.SerRefLC.Client client) {
            return base.Channel.LogOutAsync(client);
        }
        
        public void sendMessage(localClient.SerRefLC.Message msg) {
            base.Channel.sendMessage(msg);
        }
        
        public System.Threading.Tasks.Task sendMessageAsync(localClient.SerRefLC.Message msg) {
            return base.Channel.sendMessageAsync(msg);
        }
        
        public void GroupRequest(localClient.SerRefLC.Client c, localClient.SerRefLC.Group g) {
            base.Channel.GroupRequest(c, g);
        }
        
        public System.Threading.Tasks.Task GroupRequestAsync(localClient.SerRefLC.Client c, localClient.SerRefLC.Group g) {
            return base.Channel.GroupRequestAsync(c, g);
        }
        
        public void GroupLeave(localClient.SerRefLC.Client c, localClient.SerRefLC.Group g) {
            base.Channel.GroupLeave(c, g);
        }
        
        public System.Threading.Tasks.Task GroupLeaveAsync(localClient.SerRefLC.Client c, localClient.SerRefLC.Group g) {
            return base.Channel.GroupLeaveAsync(c, g);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SerRefLC.IWebClient")]
    public interface IWebClient {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebClient/GetMessages", ReplyAction="http://tempuri.org/IWebClient/GetMessagesResponse")]
        localClient.SerRefLC.Message[] GetMessages(string usrName, int gID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebClient/GetMessages", ReplyAction="http://tempuri.org/IWebClient/GetMessagesResponse")]
        System.Threading.Tasks.Task<localClient.SerRefLC.Message[]> GetMessagesAsync(string usrName, int gID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebClient/CreateMessage", ReplyAction="http://tempuri.org/IWebClient/CreateMessageResponse")]
        void CreateMessage(string usrName, int id_Msg, int id_Pos, int id_Prim, string msgTxt, System.DateTime msgTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebClient/CreateMessage", ReplyAction="http://tempuri.org/IWebClient/CreateMessageResponse")]
        System.Threading.Tasks.Task CreateMessageAsync(string usrName, int id_Msg, int id_Pos, int id_Prim, string msgTxt, System.DateTime msgTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebClient/GetGroups", ReplyAction="http://tempuri.org/IWebClient/GetGroupsResponse")]
        localClient.SerRefLC.Group[] GetGroups(string usrName, int cID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebClient/GetGroups", ReplyAction="http://tempuri.org/IWebClient/GetGroupsResponse")]
        System.Threading.Tasks.Task<localClient.SerRefLC.Group[]> GetGroupsAsync(string usrName, int cID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWebClientChannel : localClient.SerRefLC.IWebClient, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebClientClient : System.ServiceModel.ClientBase<localClient.SerRefLC.IWebClient>, localClient.SerRefLC.IWebClient {
        
        public WebClientClient() {
        }
        
        public WebClientClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebClientClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebClientClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebClientClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public localClient.SerRefLC.Message[] GetMessages(string usrName, int gID) {
            return base.Channel.GetMessages(usrName, gID);
        }
        
        public System.Threading.Tasks.Task<localClient.SerRefLC.Message[]> GetMessagesAsync(string usrName, int gID) {
            return base.Channel.GetMessagesAsync(usrName, gID);
        }
        
        public void CreateMessage(string usrName, int id_Msg, int id_Pos, int id_Prim, string msgTxt, System.DateTime msgTime) {
            base.Channel.CreateMessage(usrName, id_Msg, id_Pos, id_Prim, msgTxt, msgTime);
        }
        
        public System.Threading.Tasks.Task CreateMessageAsync(string usrName, int id_Msg, int id_Pos, int id_Prim, string msgTxt, System.DateTime msgTime) {
            return base.Channel.CreateMessageAsync(usrName, id_Msg, id_Pos, id_Prim, msgTxt, msgTime);
        }
        
        public localClient.SerRefLC.Group[] GetGroups(string usrName, int cID) {
            return base.Channel.GetGroups(usrName, cID);
        }
        
        public System.Threading.Tasks.Task<localClient.SerRefLC.Group[]> GetGroupsAsync(string usrName, int cID) {
            return base.Channel.GetGroupsAsync(usrName, cID);
        }
    }
}
