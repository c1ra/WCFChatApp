//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp1.SerRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/WCFChatApp")]
    [System.SerializableAttribute()]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Id_CField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NadimakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsrNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id_C {
            get {
                return this.Id_CField;
            }
            set {
                if ((this.Id_CField.Equals(value) != true)) {
                    this.Id_CField = value;
                    this.RaisePropertyChanged("Id_C");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nadimak {
            get {
                return this.NadimakField;
            }
            set {
                if ((object.ReferenceEquals(this.NadimakField, value) != true)) {
                    this.NadimakField = value;
                    this.RaisePropertyChanged("Nadimak");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pass {
            get {
                return this.PassField;
            }
            set {
                if ((object.ReferenceEquals(this.PassField, value) != true)) {
                    this.PassField = value;
                    this.RaisePropertyChanged("Pass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UsrName {
            get {
                return this.UsrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsrNameField, value) != true)) {
                    this.UsrNameField = value;
                    this.RaisePropertyChanged("UsrName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/WCFChatApp")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Id_MsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Id_PosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Id_PrimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MsgTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MsgTxtField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id_Msg {
            get {
                return this.Id_MsgField;
            }
            set {
                if ((this.Id_MsgField.Equals(value) != true)) {
                    this.Id_MsgField = value;
                    this.RaisePropertyChanged("Id_Msg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id_Pos {
            get {
                return this.Id_PosField;
            }
            set {
                if ((this.Id_PosField.Equals(value) != true)) {
                    this.Id_PosField = value;
                    this.RaisePropertyChanged("Id_Pos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id_Prim {
            get {
                return this.Id_PrimField;
            }
            set {
                if ((this.Id_PrimField.Equals(value) != true)) {
                    this.Id_PrimField = value;
                    this.RaisePropertyChanged("Id_Prim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MsgTime {
            get {
                return this.MsgTimeField;
            }
            set {
                if ((this.MsgTimeField.Equals(value) != true)) {
                    this.MsgTimeField = value;
                    this.RaisePropertyChanged("MsgTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MsgTxt {
            get {
                return this.MsgTxtField;
            }
            set {
                if ((object.ReferenceEquals(this.MsgTxtField, value) != true)) {
                    this.MsgTxtField = value;
                    this.RaisePropertyChanged("MsgTxt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Group", Namespace="http://schemas.datacontract.org/2004/07/WCFChatApp")]
    [System.SerializableAttribute()]
    public partial class Group : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Id_GField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxMembersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GName {
            get {
                return this.GNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GNameField, value) != true)) {
                    this.GNameField = value;
                    this.RaisePropertyChanged("GName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id_G {
            get {
                return this.Id_GField;
            }
            set {
                if ((this.Id_GField.Equals(value) != true)) {
                    this.Id_GField = value;
                    this.RaisePropertyChanged("Id_G");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxMembers {
            get {
                return this.MaxMembersField;
            }
            set {
                if ((this.MaxMembersField.Equals(value) != true)) {
                    this.MaxMembersField = value;
                    this.RaisePropertyChanged("MaxMembers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupClient", Namespace="http://schemas.datacontract.org/2004/07/WCFChatApp")]
    [System.SerializableAttribute()]
    public partial class GroupClient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Id_CField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Id_GField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id_C {
            get {
                return this.Id_CField;
            }
            set {
                if ((this.Id_CField.Equals(value) != true)) {
                    this.Id_CField = value;
                    this.RaisePropertyChanged("Id_C");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id_G {
            get {
                return this.Id_GField;
            }
            set {
                if ((this.Id_GField.Equals(value) != true)) {
                    this.Id_GField = value;
                    this.RaisePropertyChanged("Id_G");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SerRef.IAdmin", CallbackContract=typeof(WpfApp1.SerRef.IAdminCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IAdmin {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/LogIn", ReplyAction="http://tempuri.org/IClient/LogInResponse")]
        WpfApp1.SerRef.Client LogIn(string UsrName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/LogIn", ReplyAction="http://tempuri.org/IClient/LogInResponse")]
        System.Threading.Tasks.Task<WpfApp1.SerRef.Client> LogInAsync(string UsrName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, Action="http://tempuri.org/IClient/LogOut")]
        void LogOut(WpfApp1.SerRef.Client client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, Action="http://tempuri.org/IClient/LogOut")]
        System.Threading.Tasks.Task LogOutAsync(WpfApp1.SerRef.Client client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClient/sendMessage")]
        void sendMessage(WpfApp1.SerRef.Message msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClient/sendMessage")]
        System.Threading.Tasks.Task sendMessageAsync(WpfApp1.SerRef.Message msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClient/GroupRequest")]
        void GroupRequest(WpfApp1.SerRef.Client c, WpfApp1.SerRef.Group g);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClient/GroupRequest")]
        System.Threading.Tasks.Task GroupRequestAsync(WpfApp1.SerRef.Client c, WpfApp1.SerRef.Group g);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClient/GroupLeave")]
        void GroupLeave(WpfApp1.SerRef.Client c, WpfApp1.SerRef.Group g);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClient/GroupLeave")]
        System.Threading.Tasks.Task GroupLeaveAsync(WpfApp1.SerRef.Client c, WpfApp1.SerRef.Group g);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetGs", ReplyAction="http://tempuri.org/IClient/GetGsResponse")]
        System.Collections.Generic.List<WpfApp1.SerRef.Group> GetGs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetGs", ReplyAction="http://tempuri.org/IClient/GetGsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WpfApp1.SerRef.Group>> GetGsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetMyClients", ReplyAction="http://tempuri.org/IClient/GetMyClientsResponse")]
        System.Collections.Generic.List<WpfApp1.SerRef.Client> GetMyClients(int idC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetMyClients", ReplyAction="http://tempuri.org/IClient/GetMyClientsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WpfApp1.SerRef.Client>> GetMyClientsAsync(int idC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdmin/CreateUser", ReplyAction="http://tempuri.org/IAdmin/CreateUserResponse")]
        bool CreateUser(WpfApp1.SerRef.Client usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdmin/CreateUser", ReplyAction="http://tempuri.org/IAdmin/CreateUserResponse")]
        System.Threading.Tasks.Task<bool> CreateUserAsync(WpfApp1.SerRef.Client usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdmin/EditUser", ReplyAction="http://tempuri.org/IAdmin/EditUserResponse")]
        bool EditUser(WpfApp1.SerRef.Client usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdmin/EditUser", ReplyAction="http://tempuri.org/IAdmin/EditUserResponse")]
        System.Threading.Tasks.Task<bool> EditUserAsync(WpfApp1.SerRef.Client usr);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdmin/GroupRequestApproval")]
        void GroupRequestApproval(WpfApp1.SerRef.GroupClient gC, bool approval);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdmin/GroupRequestApproval")]
        System.Threading.Tasks.Task GroupRequestApprovalAsync(WpfApp1.SerRef.GroupClient gC, bool approval);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdmin/GetGroupRequests", ReplyAction="http://tempuri.org/IAdmin/GetGroupRequestsResponse")]
        System.Collections.Generic.List<WpfApp1.SerRef.GroupClient> GetGroupRequests();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdmin/GetGroupRequests", ReplyAction="http://tempuri.org/IAdmin/GetGroupRequestsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WpfApp1.SerRef.GroupClient>> GetGroupRequestsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetMs", ReplyAction="http://tempuri.org/IClient/GetMsResponse")]
        void GetMs(System.Collections.Generic.List<WpfApp1.SerRef.Message> msgs);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminChannel : WpfApp1.SerRef.IAdmin, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminClient : System.ServiceModel.DuplexClientBase<WpfApp1.SerRef.IAdmin>, WpfApp1.SerRef.IAdmin {
        
        public AdminClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public AdminClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public AdminClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AdminClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AdminClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public WpfApp1.SerRef.Client LogIn(string UsrName, string Password) {
            return base.Channel.LogIn(UsrName, Password);
        }
        
        public System.Threading.Tasks.Task<WpfApp1.SerRef.Client> LogInAsync(string UsrName, string Password) {
            return base.Channel.LogInAsync(UsrName, Password);
        }
        
        public void LogOut(WpfApp1.SerRef.Client client) {
            base.Channel.LogOut(client);
        }
        
        public System.Threading.Tasks.Task LogOutAsync(WpfApp1.SerRef.Client client) {
            return base.Channel.LogOutAsync(client);
        }
        
        public void sendMessage(WpfApp1.SerRef.Message msg) {
            base.Channel.sendMessage(msg);
        }
        
        public System.Threading.Tasks.Task sendMessageAsync(WpfApp1.SerRef.Message msg) {
            return base.Channel.sendMessageAsync(msg);
        }
        
        public void GroupRequest(WpfApp1.SerRef.Client c, WpfApp1.SerRef.Group g) {
            base.Channel.GroupRequest(c, g);
        }
        
        public System.Threading.Tasks.Task GroupRequestAsync(WpfApp1.SerRef.Client c, WpfApp1.SerRef.Group g) {
            return base.Channel.GroupRequestAsync(c, g);
        }
        
        public void GroupLeave(WpfApp1.SerRef.Client c, WpfApp1.SerRef.Group g) {
            base.Channel.GroupLeave(c, g);
        }
        
        public System.Threading.Tasks.Task GroupLeaveAsync(WpfApp1.SerRef.Client c, WpfApp1.SerRef.Group g) {
            return base.Channel.GroupLeaveAsync(c, g);
        }
        
        public System.Collections.Generic.List<WpfApp1.SerRef.Group> GetGs() {
            return base.Channel.GetGs();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WpfApp1.SerRef.Group>> GetGsAsync() {
            return base.Channel.GetGsAsync();
        }
        
        public System.Collections.Generic.List<WpfApp1.SerRef.Client> GetMyClients(int idC) {
            return base.Channel.GetMyClients(idC);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WpfApp1.SerRef.Client>> GetMyClientsAsync(int idC) {
            return base.Channel.GetMyClientsAsync(idC);
        }
        
        public bool CreateUser(WpfApp1.SerRef.Client usr) {
            return base.Channel.CreateUser(usr);
        }
        
        public System.Threading.Tasks.Task<bool> CreateUserAsync(WpfApp1.SerRef.Client usr) {
            return base.Channel.CreateUserAsync(usr);
        }
        
        public bool EditUser(WpfApp1.SerRef.Client usr) {
            return base.Channel.EditUser(usr);
        }
        
        public System.Threading.Tasks.Task<bool> EditUserAsync(WpfApp1.SerRef.Client usr) {
            return base.Channel.EditUserAsync(usr);
        }
        
        public void GroupRequestApproval(WpfApp1.SerRef.GroupClient gC, bool approval) {
            base.Channel.GroupRequestApproval(gC, approval);
        }
        
        public System.Threading.Tasks.Task GroupRequestApprovalAsync(WpfApp1.SerRef.GroupClient gC, bool approval) {
            return base.Channel.GroupRequestApprovalAsync(gC, approval);
        }
        
        public System.Collections.Generic.List<WpfApp1.SerRef.GroupClient> GetGroupRequests() {
            return base.Channel.GetGroupRequests();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WpfApp1.SerRef.GroupClient>> GetGroupRequestsAsync() {
            return base.Channel.GetGroupRequestsAsync();
        }
    }
}
